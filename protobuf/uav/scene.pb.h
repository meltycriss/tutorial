// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.proto

#ifndef PROTOBUF_scene_2eproto__INCLUDED
#define PROTOBUF_scene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace scene {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_scene_2eproto();
void protobuf_AssignDesc_scene_2eproto();
void protobuf_ShutdownFile_scene_2eproto();

class A;
class B;
class DynamicObstacles;
class GDir;
class Point;
class Polytope;
class StaticObstacles;
class Uav;
class Uavs;
class UavsDir;

// ===================================================================

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  inline Point* New() const { return New(NULL); }

  Point* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // required double y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:scene.Point)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class Uav : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.Uav) */ {
 public:
  Uav();
  virtual ~Uav();

  Uav(const Uav& from);

  inline Uav& operator=(const Uav& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Uav& default_instance();

  void Swap(Uav* other);

  // implements Message ----------------------------------------------

  inline Uav* New() const { return New(NULL); }

  Uav* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Uav& from);
  void MergeFrom(const Uav& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Uav* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // required double y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:scene.Uav)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static Uav* default_instance_;
};
// -------------------------------------------------------------------

class Polytope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.Polytope) */ {
 public:
  Polytope();
  virtual ~Polytope();

  Polytope(const Polytope& from);

  inline Polytope& operator=(const Polytope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Polytope& default_instance();

  void Swap(Polytope* other);

  // implements Message ----------------------------------------------

  inline Polytope* New() const { return New(NULL); }

  Polytope* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Polytope& from);
  void MergeFrom(const Polytope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Polytope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .scene.Point point = 1;
  int point_size() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  const ::scene::Point& point(int index) const;
  ::scene::Point* mutable_point(int index);
  ::scene::Point* add_point();
  ::google::protobuf::RepeatedPtrField< ::scene::Point >*
      mutable_point();
  const ::google::protobuf::RepeatedPtrField< ::scene::Point >&
      point() const;

  // @@protoc_insertion_point(class_scope:scene.Polytope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::scene::Point > point_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static Polytope* default_instance_;
};
// -------------------------------------------------------------------

class Uavs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.Uavs) */ {
 public:
  Uavs();
  virtual ~Uavs();

  Uavs(const Uavs& from);

  inline Uavs& operator=(const Uavs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Uavs& default_instance();

  void Swap(Uavs* other);

  // implements Message ----------------------------------------------

  inline Uavs* New() const { return New(NULL); }

  Uavs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Uavs& from);
  void MergeFrom(const Uavs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Uavs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .scene.Uav uav = 1;
  int uav_size() const;
  void clear_uav();
  static const int kUavFieldNumber = 1;
  const ::scene::Uav& uav(int index) const;
  ::scene::Uav* mutable_uav(int index);
  ::scene::Uav* add_uav();
  ::google::protobuf::RepeatedPtrField< ::scene::Uav >*
      mutable_uav();
  const ::google::protobuf::RepeatedPtrField< ::scene::Uav >&
      uav() const;

  // @@protoc_insertion_point(class_scope:scene.Uavs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::scene::Uav > uav_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static Uavs* default_instance_;
};
// -------------------------------------------------------------------

class DynamicObstacles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.DynamicObstacles) */ {
 public:
  DynamicObstacles();
  virtual ~DynamicObstacles();

  DynamicObstacles(const DynamicObstacles& from);

  inline DynamicObstacles& operator=(const DynamicObstacles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicObstacles& default_instance();

  void Swap(DynamicObstacles* other);

  // implements Message ----------------------------------------------

  inline DynamicObstacles* New() const { return New(NULL); }

  DynamicObstacles* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DynamicObstacles& from);
  void MergeFrom(const DynamicObstacles& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DynamicObstacles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .scene.Polytope do = 1;
  int do__size() const;
  void clear_do_();
  static const int kDoFieldNumber = 1;
  const ::scene::Polytope& do_(int index) const;
  ::scene::Polytope* mutable_do_(int index);
  ::scene::Polytope* add_do_();
  ::google::protobuf::RepeatedPtrField< ::scene::Polytope >*
      mutable_do_();
  const ::google::protobuf::RepeatedPtrField< ::scene::Polytope >&
      do_() const;

  // @@protoc_insertion_point(class_scope:scene.DynamicObstacles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::scene::Polytope > do__;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static DynamicObstacles* default_instance_;
};
// -------------------------------------------------------------------

class StaticObstacles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.StaticObstacles) */ {
 public:
  StaticObstacles();
  virtual ~StaticObstacles();

  StaticObstacles(const StaticObstacles& from);

  inline StaticObstacles& operator=(const StaticObstacles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StaticObstacles& default_instance();

  void Swap(StaticObstacles* other);

  // implements Message ----------------------------------------------

  inline StaticObstacles* New() const { return New(NULL); }

  StaticObstacles* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StaticObstacles& from);
  void MergeFrom(const StaticObstacles& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StaticObstacles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .scene.Polytope so = 1;
  int so_size() const;
  void clear_so();
  static const int kSoFieldNumber = 1;
  const ::scene::Polytope& so(int index) const;
  ::scene::Polytope* mutable_so(int index);
  ::scene::Polytope* add_so();
  ::google::protobuf::RepeatedPtrField< ::scene::Polytope >*
      mutable_so();
  const ::google::protobuf::RepeatedPtrField< ::scene::Polytope >&
      so() const;

  // @@protoc_insertion_point(class_scope:scene.StaticObstacles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::scene::Polytope > so_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static StaticObstacles* default_instance_;
};
// -------------------------------------------------------------------

class UavsDir : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.UavsDir) */ {
 public:
  UavsDir();
  virtual ~UavsDir();

  UavsDir(const UavsDir& from);

  inline UavsDir& operator=(const UavsDir& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UavsDir& default_instance();

  void Swap(UavsDir* other);

  // implements Message ----------------------------------------------

  inline UavsDir* New() const { return New(NULL); }

  UavsDir* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UavsDir& from);
  void MergeFrom(const UavsDir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UavsDir* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .scene.Point uavDir = 1;
  int uavdir_size() const;
  void clear_uavdir();
  static const int kUavDirFieldNumber = 1;
  const ::scene::Point& uavdir(int index) const;
  ::scene::Point* mutable_uavdir(int index);
  ::scene::Point* add_uavdir();
  ::google::protobuf::RepeatedPtrField< ::scene::Point >*
      mutable_uavdir();
  const ::google::protobuf::RepeatedPtrField< ::scene::Point >&
      uavdir() const;

  // @@protoc_insertion_point(class_scope:scene.UavsDir)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::scene::Point > uavdir_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static UavsDir* default_instance_;
};
// -------------------------------------------------------------------

class GDir : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.GDir) */ {
 public:
  GDir();
  virtual ~GDir();

  GDir(const GDir& from);

  inline GDir& operator=(const GDir& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GDir& default_instance();

  void Swap(GDir* other);

  // implements Message ----------------------------------------------

  inline GDir* New() const { return New(NULL); }

  GDir* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GDir& from);
  void MergeFrom(const GDir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GDir* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .scene.Point gDir = 1;
  bool has_gdir() const;
  void clear_gdir();
  static const int kGDirFieldNumber = 1;
  const ::scene::Point& gdir() const;
  ::scene::Point* mutable_gdir();
  ::scene::Point* release_gdir();
  void set_allocated_gdir(::scene::Point* gdir);

  // @@protoc_insertion_point(class_scope:scene.GDir)
 private:
  inline void set_has_gdir();
  inline void clear_has_gdir();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::scene::Point* gdir_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static GDir* default_instance_;
};
// -------------------------------------------------------------------

class A : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.A) */ {
 public:
  A();
  virtual ~A();

  A(const A& from);

  inline A& operator=(const A& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A& default_instance();

  void Swap(A* other);

  // implements Message ----------------------------------------------

  inline A* New() const { return New(NULL); }

  A* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const A& from);
  void MergeFrom(const A& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(A* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 row = 1;
  bool has_row() const;
  void clear_row();
  static const int kRowFieldNumber = 1;
  ::google::protobuf::int32 row() const;
  void set_row(::google::protobuf::int32 value);

  // required int32 col = 2;
  bool has_col() const;
  void clear_col();
  static const int kColFieldNumber = 2;
  ::google::protobuf::int32 col() const;
  void set_col(::google::protobuf::int32 value);

  // repeated double data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::google::protobuf::RepeatedField< double >&
      data() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:scene.A)
 private:
  inline void set_has_row();
  inline void clear_has_row();
  inline void set_has_col();
  inline void clear_has_col();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 row_;
  ::google::protobuf::int32 col_;
  ::google::protobuf::RepeatedField< double > data_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static A* default_instance_;
};
// -------------------------------------------------------------------

class B : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scene.B) */ {
 public:
  B();
  virtual ~B();

  B(const B& from);

  inline B& operator=(const B& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const B& default_instance();

  void Swap(B* other);

  // implements Message ----------------------------------------------

  inline B* New() const { return New(NULL); }

  B* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const B& from);
  void MergeFrom(const B& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(B* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 row = 1;
  bool has_row() const;
  void clear_row();
  static const int kRowFieldNumber = 1;
  ::google::protobuf::int32 row() const;
  void set_row(::google::protobuf::int32 value);

  // repeated double data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::google::protobuf::RepeatedField< double >&
      data() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:scene.B)
 private:
  inline void set_has_row();
  inline void clear_has_row();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > data_;
  ::google::protobuf::int32 row_;
  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static B* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Point

// required double x = 1;
inline bool Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double Point::x() const {
  // @@protoc_insertion_point(field_get:scene.Point.x)
  return x_;
}
inline void Point::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:scene.Point.x)
}

// required double y = 2;
inline bool Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double Point::y() const {
  // @@protoc_insertion_point(field_get:scene.Point.y)
  return y_;
}
inline void Point::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:scene.Point.y)
}

// -------------------------------------------------------------------

// Uav

// required double x = 1;
inline bool Uav::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Uav::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Uav::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Uav::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double Uav::x() const {
  // @@protoc_insertion_point(field_get:scene.Uav.x)
  return x_;
}
inline void Uav::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:scene.Uav.x)
}

// required double y = 2;
inline bool Uav::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Uav::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Uav::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Uav::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double Uav::y() const {
  // @@protoc_insertion_point(field_get:scene.Uav.y)
  return y_;
}
inline void Uav::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:scene.Uav.y)
}

// -------------------------------------------------------------------

// Polytope

// repeated .scene.Point point = 1;
inline int Polytope::point_size() const {
  return point_.size();
}
inline void Polytope::clear_point() {
  point_.Clear();
}
inline const ::scene::Point& Polytope::point(int index) const {
  // @@protoc_insertion_point(field_get:scene.Polytope.point)
  return point_.Get(index);
}
inline ::scene::Point* Polytope::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:scene.Polytope.point)
  return point_.Mutable(index);
}
inline ::scene::Point* Polytope::add_point() {
  // @@protoc_insertion_point(field_add:scene.Polytope.point)
  return point_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::scene::Point >*
Polytope::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:scene.Polytope.point)
  return &point_;
}
inline const ::google::protobuf::RepeatedPtrField< ::scene::Point >&
Polytope::point() const {
  // @@protoc_insertion_point(field_list:scene.Polytope.point)
  return point_;
}

// -------------------------------------------------------------------

// Uavs

// repeated .scene.Uav uav = 1;
inline int Uavs::uav_size() const {
  return uav_.size();
}
inline void Uavs::clear_uav() {
  uav_.Clear();
}
inline const ::scene::Uav& Uavs::uav(int index) const {
  // @@protoc_insertion_point(field_get:scene.Uavs.uav)
  return uav_.Get(index);
}
inline ::scene::Uav* Uavs::mutable_uav(int index) {
  // @@protoc_insertion_point(field_mutable:scene.Uavs.uav)
  return uav_.Mutable(index);
}
inline ::scene::Uav* Uavs::add_uav() {
  // @@protoc_insertion_point(field_add:scene.Uavs.uav)
  return uav_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::scene::Uav >*
Uavs::mutable_uav() {
  // @@protoc_insertion_point(field_mutable_list:scene.Uavs.uav)
  return &uav_;
}
inline const ::google::protobuf::RepeatedPtrField< ::scene::Uav >&
Uavs::uav() const {
  // @@protoc_insertion_point(field_list:scene.Uavs.uav)
  return uav_;
}

// -------------------------------------------------------------------

// DynamicObstacles

// repeated .scene.Polytope do = 1;
inline int DynamicObstacles::do__size() const {
  return do__.size();
}
inline void DynamicObstacles::clear_do_() {
  do__.Clear();
}
inline const ::scene::Polytope& DynamicObstacles::do_(int index) const {
  // @@protoc_insertion_point(field_get:scene.DynamicObstacles.do)
  return do__.Get(index);
}
inline ::scene::Polytope* DynamicObstacles::mutable_do_(int index) {
  // @@protoc_insertion_point(field_mutable:scene.DynamicObstacles.do)
  return do__.Mutable(index);
}
inline ::scene::Polytope* DynamicObstacles::add_do_() {
  // @@protoc_insertion_point(field_add:scene.DynamicObstacles.do)
  return do__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::scene::Polytope >*
DynamicObstacles::mutable_do_() {
  // @@protoc_insertion_point(field_mutable_list:scene.DynamicObstacles.do)
  return &do__;
}
inline const ::google::protobuf::RepeatedPtrField< ::scene::Polytope >&
DynamicObstacles::do_() const {
  // @@protoc_insertion_point(field_list:scene.DynamicObstacles.do)
  return do__;
}

// -------------------------------------------------------------------

// StaticObstacles

// repeated .scene.Polytope so = 1;
inline int StaticObstacles::so_size() const {
  return so_.size();
}
inline void StaticObstacles::clear_so() {
  so_.Clear();
}
inline const ::scene::Polytope& StaticObstacles::so(int index) const {
  // @@protoc_insertion_point(field_get:scene.StaticObstacles.so)
  return so_.Get(index);
}
inline ::scene::Polytope* StaticObstacles::mutable_so(int index) {
  // @@protoc_insertion_point(field_mutable:scene.StaticObstacles.so)
  return so_.Mutable(index);
}
inline ::scene::Polytope* StaticObstacles::add_so() {
  // @@protoc_insertion_point(field_add:scene.StaticObstacles.so)
  return so_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::scene::Polytope >*
StaticObstacles::mutable_so() {
  // @@protoc_insertion_point(field_mutable_list:scene.StaticObstacles.so)
  return &so_;
}
inline const ::google::protobuf::RepeatedPtrField< ::scene::Polytope >&
StaticObstacles::so() const {
  // @@protoc_insertion_point(field_list:scene.StaticObstacles.so)
  return so_;
}

// -------------------------------------------------------------------

// UavsDir

// repeated .scene.Point uavDir = 1;
inline int UavsDir::uavdir_size() const {
  return uavdir_.size();
}
inline void UavsDir::clear_uavdir() {
  uavdir_.Clear();
}
inline const ::scene::Point& UavsDir::uavdir(int index) const {
  // @@protoc_insertion_point(field_get:scene.UavsDir.uavDir)
  return uavdir_.Get(index);
}
inline ::scene::Point* UavsDir::mutable_uavdir(int index) {
  // @@protoc_insertion_point(field_mutable:scene.UavsDir.uavDir)
  return uavdir_.Mutable(index);
}
inline ::scene::Point* UavsDir::add_uavdir() {
  // @@protoc_insertion_point(field_add:scene.UavsDir.uavDir)
  return uavdir_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::scene::Point >*
UavsDir::mutable_uavdir() {
  // @@protoc_insertion_point(field_mutable_list:scene.UavsDir.uavDir)
  return &uavdir_;
}
inline const ::google::protobuf::RepeatedPtrField< ::scene::Point >&
UavsDir::uavdir() const {
  // @@protoc_insertion_point(field_list:scene.UavsDir.uavDir)
  return uavdir_;
}

// -------------------------------------------------------------------

// GDir

// required .scene.Point gDir = 1;
inline bool GDir::has_gdir() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GDir::set_has_gdir() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GDir::clear_has_gdir() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GDir::clear_gdir() {
  if (gdir_ != NULL) gdir_->::scene::Point::Clear();
  clear_has_gdir();
}
inline const ::scene::Point& GDir::gdir() const {
  // @@protoc_insertion_point(field_get:scene.GDir.gDir)
  return gdir_ != NULL ? *gdir_ : *default_instance_->gdir_;
}
inline ::scene::Point* GDir::mutable_gdir() {
  set_has_gdir();
  if (gdir_ == NULL) {
    gdir_ = new ::scene::Point;
  }
  // @@protoc_insertion_point(field_mutable:scene.GDir.gDir)
  return gdir_;
}
inline ::scene::Point* GDir::release_gdir() {
  // @@protoc_insertion_point(field_release:scene.GDir.gDir)
  clear_has_gdir();
  ::scene::Point* temp = gdir_;
  gdir_ = NULL;
  return temp;
}
inline void GDir::set_allocated_gdir(::scene::Point* gdir) {
  delete gdir_;
  gdir_ = gdir;
  if (gdir) {
    set_has_gdir();
  } else {
    clear_has_gdir();
  }
  // @@protoc_insertion_point(field_set_allocated:scene.GDir.gDir)
}

// -------------------------------------------------------------------

// A

// required int32 row = 1;
inline bool A::has_row() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void A::set_has_row() {
  _has_bits_[0] |= 0x00000001u;
}
inline void A::clear_has_row() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void A::clear_row() {
  row_ = 0;
  clear_has_row();
}
inline ::google::protobuf::int32 A::row() const {
  // @@protoc_insertion_point(field_get:scene.A.row)
  return row_;
}
inline void A::set_row(::google::protobuf::int32 value) {
  set_has_row();
  row_ = value;
  // @@protoc_insertion_point(field_set:scene.A.row)
}

// required int32 col = 2;
inline bool A::has_col() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void A::set_has_col() {
  _has_bits_[0] |= 0x00000002u;
}
inline void A::clear_has_col() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void A::clear_col() {
  col_ = 0;
  clear_has_col();
}
inline ::google::protobuf::int32 A::col() const {
  // @@protoc_insertion_point(field_get:scene.A.col)
  return col_;
}
inline void A::set_col(::google::protobuf::int32 value) {
  set_has_col();
  col_ = value;
  // @@protoc_insertion_point(field_set:scene.A.col)
}

// repeated double data = 3;
inline int A::data_size() const {
  return data_.size();
}
inline void A::clear_data() {
  data_.Clear();
}
inline double A::data(int index) const {
  // @@protoc_insertion_point(field_get:scene.A.data)
  return data_.Get(index);
}
inline void A::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:scene.A.data)
}
inline void A::add_data(double value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:scene.A.data)
}
inline const ::google::protobuf::RepeatedField< double >&
A::data() const {
  // @@protoc_insertion_point(field_list:scene.A.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< double >*
A::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:scene.A.data)
  return &data_;
}

// -------------------------------------------------------------------

// B

// required int32 row = 1;
inline bool B::has_row() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void B::set_has_row() {
  _has_bits_[0] |= 0x00000001u;
}
inline void B::clear_has_row() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void B::clear_row() {
  row_ = 0;
  clear_has_row();
}
inline ::google::protobuf::int32 B::row() const {
  // @@protoc_insertion_point(field_get:scene.B.row)
  return row_;
}
inline void B::set_row(::google::protobuf::int32 value) {
  set_has_row();
  row_ = value;
  // @@protoc_insertion_point(field_set:scene.B.row)
}

// repeated double data = 2;
inline int B::data_size() const {
  return data_.size();
}
inline void B::clear_data() {
  data_.Clear();
}
inline double B::data(int index) const {
  // @@protoc_insertion_point(field_get:scene.B.data)
  return data_.Get(index);
}
inline void B::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:scene.B.data)
}
inline void B::add_data(double value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:scene.B.data)
}
inline const ::google::protobuf::RepeatedField< double >&
B::data() const {
  // @@protoc_insertion_point(field_list:scene.B.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< double >*
B::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:scene.B.data)
  return &data_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace scene

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scene_2eproto__INCLUDED
